!function(e){var o={};function t(r){if(o[r])return o[r].exports;var n=o[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,t),n.l=!0,n.exports}t.m=e,t.c=o,t.d=function(e,o,r){t.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,o){if(1&o&&(e=t(e)),8&o)return e;if(4&o&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&o&&"string"!=typeof e)for(var n in e)t.d(r,n,function(o){return e[o]}.bind(null,n));return r},t.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(o,"a",o),o},t.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},t.p="",t(t.s=0)}([function(e,o){var t=function(){function e(e){this.salary=e}return e.prototype.workFromHome=function(){return"Working from home"},e.prototype.getCoffeeBreak=function(){return"Getting a coffee break"},e.prototype.workDirectorTasks=function(){return"Getting to director tasks"},e}(),r=function(){function e(e){this.salary=e}return e.prototype.workFromHome=function(){return"Cannot work from home"},e.prototype.getCoffeeBreak=function(){return"Cannot have a break"},e.prototype.workTeacherTasks=function(){return"Getting to work"},e}();new r(200),new t(500);function n(e){var o;return(o="string"==typeof e?parseInt(e.replace(/[^0-9]/g,""),10):e)<500?new r(o):new t(o)}function u(e){return function(e){return e instanceof t}(e)?e.workDirectorTasks():e.workTeacherTasks()}function i(e){"Math"===e&&console.log("Teaching Math"),"History"===e&&console.log("Teaching History")}var c=n("$200"),a=n(500),f=n(100);console.log(c),console.log(a),console.log(f),console.log(u(n(200))),console.log(u(n(1e3))),i("Math"),i("History")}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,